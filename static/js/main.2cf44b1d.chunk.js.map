{"version":3,"sources":["App.js","Keypad.jsx","serviceWorker.js","index.js"],"names":["App","useState","operation","updateOperation","result","updateResult","action","updateAction","keyPress","btnName","answer","eval","Number","isInteger","toFixed","err","className","slice","clickEvent","Keypad","props","btnPress","event","target","name","onClick","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2cf44b1d.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport Keypad from './Keypad';\n\nfunction App() {\n  const [operation, updateOperation] = useState('');\n  const [result, updateResult] = useState('');\n  const [action, updateAction] = useState(false);\n\n  const keyPress = (btnName) => {\n    if (btnName == 'c') {\n      updateResult('');\n      updateOperation('');\n    } else if (btnName == '=') {\n      try {\n        let answer = eval(operation);\n        if (Number.isInteger(answer)) {\n          updateResult(answer);\n        } else {\n          updateResult(answer.toFixed(2));\n        }\n        updateAction(true);\n      } catch (err) {\n        updateResult(<span className='error-msg'>Math Error</span>);\n        updateOperation('');\n      }\n    } else if (btnName == 'del') {\n      updateOperation(operation.slice(0, -1));\n      updateResult('');\n    } else {\n      if (action == true) {\n        updateOperation(result + btnName);\n        updateResult('');\n        updateAction(false);\n      } else {\n        updateOperation(operation + btnName);\n      }\n    }\n  };\n\n  return (\n    <>\n      <div className='calculator-body'>\n        <div className='calculator'>\n          <div className='calculator-display'>\n            <p>{operation}</p>\n            <h1>{result}</h1>\n          </div>\n          <Keypad clickEvent={keyPress} />\n          <p className='developer'>handcrafted by ashutoshbisoyi</p>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\n\r\nconst Keypad = (props) => {\r\n  //\r\n  const btnPress = (event) => {\r\n    props.clickEvent(event.target.name);\r\n  };\r\n\r\n  return (\r\n    <div className='keypad-section'>\r\n      <div className='row'>\r\n        <div className='col-6'>\r\n          <button name='c' onClick={btnPress} className='calc-btn'>\r\n            C\r\n          </button>\r\n        </div>\r\n        <div className='col-3'>\r\n          <button name='%' onClick={btnPress} className='calc-btn '>\r\n            %\r\n          </button>\r\n        </div>\r\n        <div className='col-3'>\r\n          <button name='/' onClick={btnPress} className='calc-btn operator-btn'>\r\n            /\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className='row'>\r\n        <div className='col-3'>\r\n          <button name='7' onClick={btnPress} className='calc-btn'>\r\n            7\r\n          </button>\r\n        </div>\r\n        <div className='col-3'>\r\n          <button name='8' onClick={btnPress} className='calc-btn'>\r\n            8\r\n          </button>\r\n        </div>\r\n        <div className='col-3'>\r\n          <button name='9' onClick={btnPress} className='calc-btn'>\r\n            9\r\n          </button>\r\n        </div>\r\n        <div className='col-3'>\r\n          <button name='*' onClick={btnPress} className='calc-btn operator-btn'>\r\n            *\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className='row'>\r\n        <div className='col-3'>\r\n          <button name='4' onClick={btnPress} className='calc-btn'>\r\n            4\r\n          </button>\r\n        </div>\r\n        <div className='col-3'>\r\n          <button name='5' onClick={btnPress} className='calc-btn'>\r\n            5\r\n          </button>\r\n        </div>\r\n        <div className='col-3'>\r\n          <button name='6' onClick={btnPress} className='calc-btn'>\r\n            6\r\n          </button>\r\n        </div>\r\n        <div className='col-3'>\r\n          <button name='-' onClick={btnPress} className='calc-btn operator-btn'>\r\n            -\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className='row'>\r\n        <div className='col-3'>\r\n          <button name='1' onClick={btnPress} className='calc-btn'>\r\n            1\r\n          </button>\r\n        </div>\r\n        <div className='col-3'>\r\n          <button name='2' onClick={btnPress} className='calc-btn'>\r\n            2\r\n          </button>\r\n        </div>\r\n        <div className='col-3'>\r\n          <button name='3' onClick={btnPress} className='calc-btn'>\r\n            3\r\n          </button>\r\n        </div>\r\n        <div className='col-3'>\r\n          <button name='+' onClick={btnPress} className='calc-btn operator-btn'>\r\n            +\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className='row'>\r\n        <div className='col-3'>\r\n          <button name='0' onClick={btnPress} className='calc-btn'>\r\n            0\r\n          </button>\r\n        </div>\r\n        <div className='col-3'>\r\n          <button name='.' onClick={btnPress} className='calc-btn'>\r\n            .\r\n          </button>\r\n        </div>\r\n        <div className='col-3'>\r\n          <button name='del' onClick={btnPress} className='calc-btn'>\r\n            del\r\n          </button>\r\n        </div>\r\n        <div className='col-3'>\r\n          <button name='=' onClick={btnPress} className='calc-btn eqal-btn'>\r\n            =\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Keypad;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}